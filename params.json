{"name":"PyIRC","tagline":"An extensible and easy-to-use IRC library for Python","body":"# PyIRC\r\nThis is PyIRC, an IRC library designed to be flexible, extensible, usable, and\r\nuseful. It is entirely written in Python with no required external\r\ndependencies.\r\n\r\nThis is a rewrite of a rewrite, so you may see PyIRC 3 sprinkled in some\r\ncomments. Much has been learned from the first two efforts (PyIRC 1 had many\r\nissues with being too monolithic, and had too many Unicode problems due to\r\nPython 2 compatibility. PyIRC 2 was a bad API design (using subclassing) that\r\nnever could be properly rewritten). Some of the code has been retained from\r\nPyIRC 2, where appropriate.\r\n\r\nSee LICENSE for details on distribution of this README and the software itself.\r\n\r\n## Introduction\r\nThis library has been designed with standards compliance in mind and as a goal.\r\nRelevant standards include [RFC1459](http://tools.ietf.org/html/rfc1459.html),\r\n[RFC2812](http://tools.ietf.org/html/rfc2812.html), and\r\n[IRCv3](http://ircv3.org). RFC1459 and RFC2812 compliance is basically finished\r\n(the different USER syntax in RFC2812 is not well-supported), as well as IRCv3.0\r\nsupport. IRCv3.1 support should be fairly complete - if you notice any gaps,\r\nplease file a bug. Features of IRCv3.2 are mostly done, but may not be tested,\r\ndue to the lack of servers implementations.\r\n\r\nThe library presently supports the following in extensions:\r\n- Autojoin\r\n- STARTTLS\r\n- Message tags (some parsing is attempted, but largely untested yet)\r\n- SASL, PLAIN auth only right now\r\n- CAP \r\n- Scheduled events\r\n- Ability to hook any numeric/command and many events\r\n\r\nSee the [TODO](http://github.com/Elizafox/PyIRC/blob/master/TODO.md) for the\r\nlist of planned features.\r\n\r\n## Design\r\nPyIRC 3 is designed to be wholly uncoupled from the underlying I/O subsystem\r\nwhilst providing easy ways to ingest events. It is designed to work around\r\nyour event system, not the other way around.\r\n\r\nPlease note the library is not thread-safe at this time, although some locking\r\nis implemented (mostly sendq related stuff). If such functionality is desired,\r\nit will be added.\r\n\r\n## Platforms\r\nThe library is completely cross-platform and should work anywhere Python does,\r\nso long as it has a working socket implementation (SSL usage depends on your\r\nPython build having support for the `ssl` module - this should be almost all\r\nmodern platforms).\r\n\r\nPyIRC 3 requires Python 3.3 or newer. asyncio support requires either 3.4, or\r\nfor asyncio to be installed from PyPI.\r\n\r\n## Bugs\r\nProbably many! Tell us about them - see the support section or just file an\r\nissue on the [bug tracker :)](http://github.com/Elizacat/PyIRC/issues).\r\n\r\n## Support\r\nPoint your IRC client irc.interlinked.me #PyIRC for general questions, or file\r\nan issue/pull request on github. Feature requests are also accepted this way.\r\n\r\n## License and copyright\r\nCopyright © 2013-2015 Andrew Wilcox and Elizabeth Myers. All rights reserved.\r\n\r\nNon-third party files are licensed under the WTFPL; terms and conditions can be\r\nfound at:\r\n\r\n\thttp://www.wtfpl.net/about/\r\n\r\nSelon votre choix, vous pouvez aussi utiliser la Licence Publique Rien À\r\nBranler (LPRAB):\r\n\r\n\thttp://sam.zoy.org/lprab/","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}